{
    "openapi": "3.0.0",
    "info": {
        "title": "Microservice Test Lumen Project API Documentation",
        "description": "Enjoy with our documentation of Microservice Lumen Test API.",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "3.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/v1",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/posts": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get Posts",
                "description": "Get Post",
                "operationId": "506b68148d06fa079fffec3a27b7d2fc",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Per Page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Create a New Post",
                "description": "Create a new Post",
                "operationId": "StorePost",
                "requestBody": {
                    "description": "Post data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "content",
                                    "is_default",
                                    "can_delete"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string"
                                    },
                                    "is_default": {
                                        "type": "boolean"
                                    },
                                    "can_delete": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/posts/{id}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get a post by ID",
                "operationId": "16467ee9d97de1a3a945e7f84e39c6f4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Post"
                ],
                "summary": "Update an Existing Post",
                "description": "Update an existing Post",
                "operationId": "UpdatePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated post data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Updated Content"
                                    },
                                    "is_default": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "can_delete": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Post"
                ],
                "summary": "Soft Delete a Post",
                "description": "Soft delete a post",
                "operationId": "DeletePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to delete",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Post not found or not soft deleted"
                    }
                }
            }
        },
        "/posts/{id}/restore": {
            "put": {
                "tags": [
                    "Post"
                ],
                "summary": "Restore a Soft Deleted Post",
                "description": "Restore a soft deleted post by setting deleted_at to null",
                "operationId": "RestorePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to restore",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Post not found or not soft deleted"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/posts/{id}/force": {
            "delete": {
                "tags": [
                    "Post"
                ],
                "summary": "Force Delete a Post",
                "description": "Force delete a Post permanently",
                "operationId": "ForceDeletePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to force delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/posts/soft-deleted": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get All Soft Deleted Posts",
                "description": "Retrieve all soft deleted posts",
                "operationId": "GetAllSoftDeletedPosts",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Per Page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/posts/search": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Search posts by title",
                "operationId": "7e6cf1dd882ffe36bba84c1cda40aa74",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query string",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Get Tags",
                "description": "Get Tags",
                "operationId": "be21c63d1dbbae448524dd8b1fcc09a5",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Per Page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tag"
                ],
                "summary": "Create a New Tag",
                "description": "Create a new Tag",
                "operationId": "StoreTag",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the tag",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_default",
                        "in": "query",
                        "description": "Is default tag",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "can_delete",
                        "in": "query",
                        "description": "Can delete tag",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/tags/{id}": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Get a tag by ID",
                "operationId": "9a31cc836ea58c31ec6bee8fb9f2e31a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tag to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tag"
                ],
                "summary": "Soft Delete a Tag",
                "description": "Soft delete a Tag",
                "operationId": "SoftDeleteTag",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tag to soft delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/tags/update/{id}": {
            "put": {
                "tags": [
                    "Tag"
                ],
                "summary": "Update an Existing Tag",
                "description": "Update an existing Tag",
                "operationId": "UpdateTag",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tag to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the tag",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_default",
                        "in": "query",
                        "description": "Is default tag",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "can_delete",
                        "in": "query",
                        "description": "Can delete tag",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/restore/tags/{id}": {
            "post": {
                "tags": [
                    "Tag"
                ],
                "summary": "Restore a Soft Deleted Tag",
                "description": "Restore a soft deleted tag",
                "operationId": "RestoreTag",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tag to restore",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/tags/force-delete/{id}": {
            "delete": {
                "tags": [
                    "Tag"
                ],
                "summary": "Force Delete a Tag",
                "description": "Force delete a tag permanently",
                "operationId": "ForceDeleteTag",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tag to force delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearer": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "Bearer"
            }
        }
    }
}